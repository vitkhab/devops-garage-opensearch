---
- name: Create Yandex.Cloud VMs
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
  - name: Check env vars are set
    fail:
      msg: "Env variable {{ item }} is not defined"
    when: not lookup('env', item)
    no_log: false
    loop:
    - "YC_TOKEN"
    - "YC_FOLDER_ID"

  - name: Generate ssh keypair
    openssh_keypair:
      path: "{{ playbook_dir }}/id_rsa"
      comment: "ubuntu"
    register: ssh_keypair

  - name: Create VM
    ycc_vm:
      auth:
        # TODO: Parameterize auth file location
        service_account_key: '{{lookup("file", "~/sa.json")}}'
      name: "{{ item.name }}"
      folder_id: '{{lookup("env", "YC_FOLDER_ID")}}'
      state: present
      subnet_id: "{{ item.subnet_id }}"
      image_family: "{{ item.image_family }}"
      login: "{{ item.login | default('molecule') }}"
      public_ssh_key: "{{ ssh_keypair.public_key }}"
      assign_public_ip: True
    loop: "{{ molecule_yml.platforms }}"
    register: yc_instances

  - debug:
      var: yc_instances.results
    when: "{{ lookup('env', 'MOLECULE_DEBUG') | bool }}"

  # Mandatory configuration for Molecule to function.
  - name: Populate instance config dict
    set_fact:
      instance_conf_dict: {
        'instance': "{{ item.response.name }}",
        'address': "{{ item.response.networkInterfaces[0].primaryV4Address.oneToOneNat.address }}",
        'user': "{{ item.invocation.module_args.login }}",
        'port': "22",
        'identity_file': "{{ ssh_keypair.filename }}" }
    with_items: "{{ yc_instances.results }}"
    register: instance_config_dict

  - debug:
      var: instance_config_dict
    when: "{{ lookup('env', 'MOLECULE_DEBUG') | bool }}"
  
  - name: Convert instance config dict to a list
    set_fact:
      instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"

  - debug:
      var: instance_conf
    when: "{{ lookup('env', 'MOLECULE_DEBUG') | bool }}"

  - name: Dump instance config
    copy:
      content: "{{ instance_conf | to_json | from_json | to_yaml }}"
      dest: "{{ molecule_instance_config }}"

  - name: Wait for SSH
    wait_for:
      port: "22"
      host: "{{ item.address }}"
      search_regex: SSH
      delay: 10
    with_items: "{{ lookup('file', molecule_instance_config) | from_yaml }}"
